/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Bmlt);
  }
}(this, function(expect, Bmlt) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Bmlt.RootServerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RootServerApi', function() {
    describe('authLogout', function() {
      it('should call authLogout successfully', function(done) {
        //uncomment below and update the code to test authLogout
        //instance.authLogout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRefresh', function() {
      it('should call authRefresh successfully', function(done) {
        //uncomment below and update the code to test authRefresh
        //instance.authRefresh(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authToken', function() {
      it('should call authToken successfully', function(done) {
        //uncomment below and update the code to test authToken
        //instance.authToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createErrorTest', function() {
      it('should call createErrorTest successfully', function(done) {
        //uncomment below and update the code to test createErrorTest
        //instance.createErrorTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFormat', function() {
      it('should call createFormat successfully', function(done) {
        //uncomment below and update the code to test createFormat
        //instance.createFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMeeting', function() {
      it('should call createMeeting successfully', function(done) {
        //uncomment below and update the code to test createMeeting
        //instance.createMeeting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createServiceBody', function() {
      it('should call createServiceBody successfully', function(done) {
        //uncomment below and update the code to test createServiceBody
        //instance.createServiceBody(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFormat', function() {
      it('should call deleteFormat successfully', function(done) {
        //uncomment below and update the code to test deleteFormat
        //instance.deleteFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMeeting', function() {
      it('should call deleteMeeting successfully', function(done) {
        //uncomment below and update the code to test deleteMeeting
        //instance.deleteMeeting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteServiceBody', function() {
      it('should call deleteServiceBody successfully', function(done) {
        //uncomment below and update the code to test deleteServiceBody
        //instance.deleteServiceBody(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUser', function() {
      it('should call deleteUser successfully', function(done) {
        //uncomment below and update the code to test deleteUser
        //instance.deleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFormat', function() {
      it('should call getFormat successfully', function(done) {
        //uncomment below and update the code to test getFormat
        //instance.getFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFormats', function() {
      it('should call getFormats successfully', function(done) {
        //uncomment below and update the code to test getFormats
        //instance.getFormats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLaravelLog', function() {
      it('should call getLaravelLog successfully', function(done) {
        //uncomment below and update the code to test getLaravelLog
        //instance.getLaravelLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeeting', function() {
      it('should call getMeeting successfully', function(done) {
        //uncomment below and update the code to test getMeeting
        //instance.getMeeting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetingChanges', function() {
      it('should call getMeetingChanges successfully', function(done) {
        //uncomment below and update the code to test getMeetingChanges
        //instance.getMeetingChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeetings', function() {
      it('should call getMeetings successfully', function(done) {
        //uncomment below and update the code to test getMeetings
        //instance.getMeetings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRootServer', function() {
      it('should call getRootServer successfully', function(done) {
        //uncomment below and update the code to test getRootServer
        //instance.getRootServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRootServers', function() {
      it('should call getRootServers successfully', function(done) {
        //uncomment below and update the code to test getRootServers
        //instance.getRootServers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceBodies', function() {
      it('should call getServiceBodies successfully', function(done) {
        //uncomment below and update the code to test getServiceBodies
        //instance.getServiceBodies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceBody', function() {
      it('should call getServiceBody successfully', function(done) {
        //uncomment below and update the code to test getServiceBody
        //instance.getServiceBody(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsers', function() {
      it('should call getUsers successfully', function(done) {
        //uncomment below and update the code to test getUsers
        //instance.getUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('partialUpdateUser', function() {
      it('should call partialUpdateUser successfully', function(done) {
        //uncomment below and update the code to test partialUpdateUser
        //instance.partialUpdateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchFormat', function() {
      it('should call patchFormat successfully', function(done) {
        //uncomment below and update the code to test patchFormat
        //instance.patchFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchMeeting', function() {
      it('should call patchMeeting successfully', function(done) {
        //uncomment below and update the code to test patchMeeting
        //instance.patchMeeting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchServiceBody', function() {
      it('should call patchServiceBody successfully', function(done) {
        //uncomment below and update the code to test patchServiceBody
        //instance.patchServiceBody(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFormat', function() {
      it('should call updateFormat successfully', function(done) {
        //uncomment below and update the code to test updateFormat
        //instance.updateFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMeeting', function() {
      it('should call updateMeeting successfully', function(done) {
        //uncomment below and update the code to test updateMeeting
        //instance.updateMeeting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceBody', function() {
      it('should call updateServiceBody successfully', function(done) {
        //uncomment below and update the code to test updateServiceBody
        //instance.updateServiceBody(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUser', function() {
      it('should call updateUser successfully', function(done) {
        //uncomment below and update the code to test updateUser
        //instance.updateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
