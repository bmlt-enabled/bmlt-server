import type { LocaleObject } from 'yup';

export const ruYupLocale: LocaleObject = {
  array: {
    length: '${path} must have ${length} items',
    max: '${path} field must have less than or equal to ${max} items',
    min: '${path} field must have at least ${min} items'
  },
  boolean: {
    isValue: '${path} field must be ${value}'
  },
  date: {
    max: '${path} field must be at earlier than ${max}',
    min: '${path} field must be later than ${min}'
  },
  mixed: {
    default: '${path} is invalid',
    defined: '${path} must be defined',
    notNull: '${path} cannot be null',
    notOneOf: '${path} must not be one of the following values: ${values}',
    notType: '${path} must be a valid type',
    oneOf: '${path} must be one of the following values: ${values}',
    required: '${path} is a required field'
  },
  number: {
    integer: '${path} must be an integer',
    lessThan: '${path} must be less than ${less}',
    max: '${path} must be less than or equal to ${max}',
    min: '${path} must be greater than or equal to ${min}',
    moreThan: '${path} must be greater than ${more}',
    negative: '${path} must be a negative number',
    positive: '${path} must be a positive number'
  },
  object: {
    exact: '${path} object contains unknown properties: ${properties}',
    noUnknown: '${path} field has unspecified keys: ${unknown}'
  },
  string: {
    datetime: '${path} must be a valid ISO date-time',
    datetime_offset: '${path} must be a valid ISO date-time with UTC "Z" timezone',
    datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',
    email: '${path} must be a valid email',
    length: '${path} must be exactly ${length} characters',
    lowercase: '${path} must be a lowercase string',
    matches: '${path} must match the following: "${regex}"',
    max: '${path} must be at most ${max} characters',
    min: '${path} must be at least ${min} characters',
    trim: '${path} must be a trimmed string',
    uppercase: '${path} must be a upper case string',
    url: '${path} must be a valid URL',
    uuid: '${path} must be a valid UUID'
  },
  tuple: {
    notType: '${path} must be a valid tuple type'
  }
};

/*eslint sort-keys: ["error", "asc", {caseSensitive: false}]*/
export const ruTranslations = {
  accountSettingsTitle: 'Account Settings',
  accountTitle: 'Account',
  accountTypeTitle: 'Account Type',
  addFormat: 'Add Format',
  addMeeting: 'Add Meeting',
  addServiceBody: 'Add Service Body',
  addUser: 'Add User',
  administrationTitle: 'Administration',
  administratorTitle: 'Administrator',
  adminTitle: 'Admin',
  anteMeridiem: 'AM',
  applyChangesTitle: 'Apply Changes',
  boroughTitle: 'Borough/City Subsection',
  busLinesTitle: 'Bus Lines',
  by: 'by',
  cancel: 'Cancel',
  chooseStartTime: 'Choose start time',
  cityTownTitle: 'City/Town',
  clearFormTitle: 'Clear Form',
  closeWithoutSaving: 'Close without saving',
  commentsTitle: 'Comments',
  confirmDeleteFormat: 'Are you sure you want to delete this format?',
  confirmDeleteMeeting: 'Are you sure you want to delete this meeting?',
  confirmDeleteServiceBody: 'Are you sure you want to delete this service body?',
  confirmDeleteUser: 'Are you sure you want to delete this user?',
  confirmYesImSure: "Yes, I'm sure.",
  contact1EmailTitle: 'Contact 1 Email',
  contact1NameTitle: 'Contact 1 Name',
  contact1PhoneTitle: 'Contact 1 Phone',
  contact2EmailTitle: 'Contact 2 Email',
  contact2NameTitle: 'Contact 2 Name',
  contact2PhoneTitle: 'Contact 2 Phone',
  countySubProvinceTitle: 'County/Sub-Province',
  dashboardTitle: 'Dashboard',
  day: 'Day',
  daysOfWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
  dayTitle: 'Weekday',
  deactivatedTitle: 'Deactivated',
  deactivatedUserTitle: 'Deactivated User',
  delete: 'Delete',
  deleteFormat: 'Delete Format',
  deleteMeeting: 'Delete Meeting',
  deleteServiceBody: 'Delete Service Body',
  deleteUser: 'Delete User',
  descriptionTitle: 'Description',
  details: 'Details (row number or meeting ID)',
  downloadFile: 'Download File',
  downloading: 'Downloading...',
  downloadLaravelLog: 'Download Laravel Log',
  durationTitle: 'Duration',
  editFormat: 'Edit Format',
  editUser: 'Edit User',
  emailTitle: 'Email',
  error: 'Error',
  errors: 'Errors',
  extraInfoTitle: 'Extra Info',
  fileProcessedSuccessfully: 'âœ“ File Processed Successfully',
  filter: 'Filter',
  formatDeleteConflictError: 'Error: The format could not be deleted because it is still associated with meetings.',
  formatId: 'Format ID',
  formatsTitle: 'Formats',
  formatTranslationIsRequired: 'a translation is required for all languages for reserved formats',
  formatTypeCodes: [
    { name: 'Attendance by non-addicts (Open, Closed)', value: 'OPEN_OR_CLOSED' },
    { name: 'Common Needs and Restrictions (Mens Meeting, LGTBQ, No Children, etc.)', value: 'COMMON_NEEDS_OR_RESTRICTION' },
    { name: 'Format should be especially prominent (Clean requirement, etc.)', value: 'ALERT' },
    { name: 'Language', value: 'LANGUAGE' },
    { name: 'Location Code (Wheelchair Accessible, Limited Parking, etc.)', value: 'LOCATION' },
    { name: 'Meeting Format (Speaker, Book Study, etc.)', value: 'MEETING_FORMAT' },
    { name: 'None', value: '' }
  ],
  formatTypeTitle: 'Format Type',
  formatValidationError: 'Error: This format is protected and cannot be deleted.',
  helplineTitle: 'Helpline',
  homeTitle: 'Home',
  hoursTitle: 'Hours',
  idTitle: 'ID',
  invalidUsernameOrPassword: 'Invalid username or password.',
  keyIsRequired: 'key is required',
  keyIsReserved: 'key is reserved  -- please use something else',
  keyTitle: 'Key',
  languageSelectTitle: 'Select Language',
  latitudeTitle: 'Latitude',
  loadFile: 'Load file',
  loading: 'loading ...',
  locationMapTitle: 'Location Map', // TOFIX: translate
  locationStreetErrorMessage: 'Hybrid or In-person meetings must have a street address.',
  locationTextTitle: 'Location Text',
  loginTitle: 'Login',
  loginVerb: 'Log In',
  logout: 'Logout',
  longitudeTitle: 'Longitude',
  malformedRows: 'Malformed rows',
  meeting: 'meeting',
  meetingErrorsSomewhere: 'Tabs with one or more errors:',
  meetingIsPublishedTitle: 'Meeting is Published',
  meetingListEditorsTitle: 'Meeting List Editors',
  meetings: 'meetings',
  meetingsPerPage: 'Meetings per page',
  meetingsTitle: 'Meetings',
  meetingUnpublishedNote: 'Note: Unpublishing a meeting indicates a temporary closure. If this meeting has closed permanently, please delete it.',
  minutesTitle: 'Minutes',
  nameTitle: 'Name',
  nationTitle: 'Nation',
  nawsFormats: [
    { name: '12 Concepts', value: 'CPT' },
    { name: 'Alternate Language', value: 'LANG' },
    { name: 'Basic Text', value: 'BT' },
    { name: 'Beginner/Newcomer', value: 'BEG' },
    { name: 'Candlelight', value: 'CAN' },
    { name: 'Children Welcome', value: 'CW' },
    { name: 'Closed', value: 'CLOSED' },
    { name: 'Closed Holidays', value: 'CH' },
    { name: 'Discussion/Participation', value: 'DISC' },
    { name: 'Format Varies', value: 'VAR' },
    { name: 'Gay/Lesbian', value: 'GL' },
    { name: 'Guiding Principles', value: 'GP' },
    { name: 'IP Study', value: 'IP' },
    { name: 'It Works Study', value: 'IW' },
    { name: 'Just For Today Study', value: 'JFT' },
    { name: 'Literature Study', value: 'LIT' },
    { name: 'Living Clean', value: 'LC' },
    { name: 'Meditation', value: 'MED' },
    { name: 'Men', value: 'M' },
    { name: 'No Children', value: 'NC' },
    { name: 'Non-Smoking', value: 'NS' },
    { name: 'None', value: '' },
    { name: 'Open', value: 'OPEN' },
    { name: 'Questions & Answers', value: 'QA' },
    { name: 'Restricted Access', value: 'RA' },
    { name: 'Smoking', value: 'SMOK' },
    { name: 'Speaker', value: 'SPK' },
    { name: 'Speaker/Discussion', value: 'S-D' },
    { name: 'Spiritual Principle a Day', value: 'SPAD' },
    { name: 'Step', value: 'STEP' },
    { name: 'Step Working Guide Study', value: 'SWG' },
    { name: 'Temporarily Closed Facility', value: 'TC' },
    { name: 'Topic', value: 'TOP' },
    { name: 'Tradition', value: 'TRAD' },
    { name: 'Virtual', value: 'VM' },
    { name: 'Virtual and In-Person', value: 'HYBR' },
    { name: 'Wheelchair-Accessible', value: 'WCHR' },
    { name: 'Women', value: 'W' },
    { name: 'Young People', value: 'Y' }
  ],
  nawsFormatTitle: 'NAWS Format',
  neighborhoodTitle: 'Neighborhood',
  noFormatTranslationsError: 'At least one translation is required.',
  noLogsFound: 'No logs found',
  none: '- None -',
  noServiceBodiesTitle: 'No service bodies found that this user can edit',
  notedAsDeleted: 'Noted as deleted',
  notFound: 'Not found',
  noTranslationAvailable: 'no English version available',
  noUpdateNeeded: 'No update needed',
  noUsersTitle: 'No other users found that this user can edit',
  noWhitespaceInKey: 'Whitespace not allowed in key',
  observerTitle: 'Service Body Observer',
  ownedByTitle: 'Owned By',
  paginationOf: 'of',
  paginationShowing: 'Showing',
  parentIdTitle: 'Service Body Parent',
  passwordTitle: 'Password',
  phoneMeetingTitle: 'Phone Meeting Dial-in Number',
  postMeridiem: 'PM',
  processingFile: 'Processing file...',
  published: 'Published',
  search: 'Search',
  searchByDay: 'Search by day',
  searchByName: 'Search by name',
  searchByServiceBody: 'Search by Service Body',
  searchMeetings: 'Search meetings...',
  selectAllDays: 'Select All Days',
  selectAllServiceBodies: 'Select All Service Bodies',
  serverAdministratorTitle: 'Main Server Administrator',
  serverTitle: 'BMLT Server',
  serviceBodiesNoParent: 'No Parent (Top-Level)',
  serviceBodiesTitle: 'Service Bodies',
  serviceBodiesWithEditableMeetings: 'This user can edit meetings in these service bodies:',
  serviceBodyAdminTitle: 'Service Body Administrator',
  serviceBodyDeleteConflictError: 'Error: The service body could not be deleted because it is still associated with meetings or is a parent of other service bodies.',
  serviceBodyTitle: 'Service Body',
  serviceBodyTypeTitle: 'Service Body Type',
  showAllTranslations: 'Show all translations',
  startTimeTitle: 'Start Time',
  stateTitle: 'State/Province',
  streetTitle: 'Street',
  summary: 'Summary',
  supportedFileFormats: 'Supported formats: Excel (.xlsx) and CSV (.csv)',
  tabsBasic: 'Basic',
  tabsChanges: 'Changes',
  tabsLocation: 'Location',
  tabsOther: 'Other',
  time: 'Time',
  timeAfternoon: 'Afternoon',
  timeEvening: 'Evening',
  timeMorning: 'Morning',
  timeZoneSelectPlaceholder: 'Choose option (or leave blank to auto-detect from location)',
  timeZoneTitle: 'Time Zone',
  totalRows: 'Total rows (excluding header)',
  trainLinesTitle: 'Train Lines',
  unpublished: 'Unpublished',
  unselectAllDays: 'Unselect All Days',
  unselectAllServiceBodies: 'Unselect All Service Bodies',
  updated: 'Updated',
  updateWorldCommitteeCodes: 'Update World Committee Codes',
  userDeleteConflictError: 'Error: The user could not be deleted because it is still associated with at least one service body or is the parent of another user.',
  userIsDeactivated: 'User is deactivated.',
  usernameTitle: 'Username',
  usersTitle: 'Users',
  userTitle: 'User',
  userTypeTitle: 'User Type',
  venueTypeTitle: 'Venue Type',
  virtualMeetingAdditionalInfoTitle: 'Virtual Meeting Additional Information',
  virtualMeetingTitle: 'Virtual Meeting Link',
  websiteUrlTitle: 'Web Site URL',
  welcome: 'Welcome',
  worldIdTitle: 'World Committee Code',
  youHaveUnsavedChanges: 'You have unsaved changes. Do you really want to close?',
  zipCodeTitle: 'Zip Code/Postal Code'
};
